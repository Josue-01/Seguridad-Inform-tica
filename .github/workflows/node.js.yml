name: UNA-CHAT JOSUE

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  # Job de construcción e instalación de dependencias
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [20.x]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

  # Job de Linting para análisis de convenciones de código
  lint:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'

      - name: Run ESLint
        run: npm run lint --if-present

  # Job de Testing
  test:
    runs-on: ubuntu-latest
    needs: [build, lint]
    strategy:
      matrix:
        node-version: [20.x]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: List installed packages
        run: npm list

      - name: Run tests
        run: npm test

  # Job de construcción y entrega de Docker
  docker-delivery:
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build Docker image
        run: docker build -t ${{ secrets.DOCKER_USERNAME }}/chat-una-app:latest .

      - name: Push Docker image to Docker Hub
        run: docker push ${{ secrets.DOCKER_USERNAME }}/chat-una-app:latest

  # Job de escaneo de vulnerabilidades de Docker
  docker-scan:
    needs: docker-delivery
    runs-on: ubuntu-latest
    steps:
      - name: Install Trivy
        run: |
          sudo apt-get update
          sudo apt-get install -y wget
          # Descargar una versión específica conocida (por ejemplo, 0.41.0)
          wget https://github.com/aquasecurity/trivy/releases/download/v0.41.0/trivy_0.41.0_Linux-64bit.deb
          sudo dpkg -i trivy_0.41.0_Linux-64bit.deb
          trivy --version  # Verifica la instalación

  # Job de despliegue a ambiente de staging
  deploy:
    runs-on: ubuntu-latest
    needs: docker-scan
    steps:
      - name: Azure login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Deploy to Azure Web App
        uses: azure/webapps-deploy@v2
        with:
          app-name: "Poryect-info"
          images: josue96/chat-una-app:latest

  # Job de escaneo de seguridad con Nuclei
  nuclei-scan:
    runs-on: ubuntu-latest
    needs: deploy
    steps:
      - name: Run Nuclei Security Scans
        uses: projectdiscovery/nuclei-action@v1
        with:
          url: ${{ secrets.STAGING_URL }}
