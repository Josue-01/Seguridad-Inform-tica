name: SAST UNA-CHAT JOSUE

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  # Job de Testing
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [20.x]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: List installed packages
        run: npm list

      - name: Run tests
        run: npm test

  # Job 5: CodeQL (SAST - Static Code Analysis)
  codeql:
    runs-on: ubuntu-latest
    permissions:
      actions: write
      security-events: write
    strategy:
      matrix:
        language: [ 'javascript' ]  # Aquí indicamos el lenguaje que queremos analizar (puedes agregar más si lo necesitas)
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Initialize CodeQL
        uses: github/codeql-action/init@v2
        with:
          languages: ${{ matrix.language }}

      - name: Autobuild
        uses: github/codeql-action/autobuild@v2
        # La acción 'autobuild' intenta construir el código de manera automática para que el análisis funcione correctamente

      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v2
        # Esta acción realiza el análisis estático en busca de vulnerabilidades y otros problemas de seguridad

  # Job de despliegue y análisis de seguridad (otros trabajos como despliegue, etc.)
  deploy:
    runs-on: ubuntu-latest
    needs: [codeql]  # Asegura que el despliegue solo suceda después de realizar el análisis
    steps:
      - name: Azure login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Deploy to Azure Web App
        uses: azure/webapps-deploy@v2
        with:
          app-name: "Proyecto-Info-Sec"
          images: josue96/chat-una-app:latest

  # Job para escaneo de vulnerabilidades (si se requiere)
  docker-scan:
    runs-on: ubuntu-latest
    needs: deploy
    steps:
      - name: Install Trivy
        run: |
          sudo apt-get update
          sudo apt-get install -y wget
          wget https://github.com/aquasecurity/trivy/releases/download/v0.41.0/trivy_0.41.0_Linux-64bit.deb
          sudo dpkg -i trivy_0.41.0_Linux-64bit.deb
          trivy --version
